// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToolTime.Data;

#nullable disable

namespace ToolTime.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250706055353_addUserRoles")]
    partial class addUserRoles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToolTime.Models.CheckoutRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualReturn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpectedReturnDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ToolId");

                    b.HasIndex("UserId");

                    b.ToTable("CheckoutRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckoutDateTime = new DateTime(2025, 7, 4, 5, 53, 52, 802, DateTimeKind.Utc).AddTicks(4429),
                            ExpectedReturnDateTime = new DateTime(2025, 7, 11, 5, 53, 52, 802, DateTimeKind.Utc).AddTicks(4430),
                            ToolId = 1,
                            UserId = "johndoe123"
                        });
                });

            modelBuilder.Entity("ToolTime.Models.MaintenanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssueDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ToolId");

                    b.HasIndex("UserId");

                    b.ToTable("MaintenanceRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 3, 5, 53, 52, 802, DateTimeKind.Utc).AddTicks(4485),
                            IssueDesc = "Battery not charging properly",
                            Status = "Open",
                            ToolId = 1,
                            UserId = "johndoe123"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 26, 5, 53, 52, 802, DateTimeKind.Utc).AddTicks(4487),
                            IssueDesc = "Blade guard is loose",
                            ResolvedAt = new DateTime(2025, 7, 1, 5, 53, 52, 802, DateTimeKind.Utc).AddTicks(4488),
                            Status = "Resolved",
                            ToolId = 2,
                            UserId = "johndoe123"
                        });
                });

            modelBuilder.Entity("ToolTime.Models.Tool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastInspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SerialNumber")
                        .IsUnique();

                    b.ToTable("Tools");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastInspectionDate = new DateTime(2025, 6, 26, 5, 53, 52, 802, DateTimeKind.Utc).AddTicks(4276),
                            Name = "Makita Hammer Drill",
                            SerialNumber = "SN12345",
                            Type = "Drill"
                        },
                        new
                        {
                            Id = 2,
                            LastInspectionDate = new DateTime(2025, 7, 1, 5, 53, 52, 802, DateTimeKind.Utc).AddTicks(4285),
                            Name = "Bosch Circular Saw",
                            SerialNumber = "SN98765",
                            Type = "Saw"
                        });
                });

            modelBuilder.Entity("ToolTime.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "u1",
                            Password = "admin123",
                            Username = "admin"
                        },
                        new
                        {
                            Id = "u2",
                            Password = "manager123",
                            Username = "manager"
                        },
                        new
                        {
                            Id = "u3",
                            Password = "tech123",
                            Username = "tech1"
                        },
                        new
                        {
                            Id = "u4",
                            Password = "tech123",
                            Username = "tech2"
                        },
                        new
                        {
                            Id = "u5",
                            Password = "user123",
                            Username = "user1"
                        },
                        new
                        {
                            Id = "u6",
                            Password = "user123",
                            Username = "user2"
                        },
                        new
                        {
                            Id = "u7",
                            Password = "user123",
                            Username = "user3"
                        },
                        new
                        {
                            Id = "u8",
                            Password = "john123",
                            Username = "john"
                        },
                        new
                        {
                            Id = "u9",
                            Password = "jane123",
                            Username = "jane"
                        },
                        new
                        {
                            Id = "u10",
                            Password = "dev123",
                            Username = "dev"
                        },
                        new
                        {
                            Id = "u11",
                            Password = "qa123",
                            Username = "qa"
                        },
                        new
                        {
                            Id = "u12",
                            Password = "view123",
                            Username = "viewer"
                        },
                        new
                        {
                            Id = "u13",
                            Password = "super123",
                            Username = "superadmin"
                        },
                        new
                        {
                            Id = "u14",
                            Password = "readonly123",
                            Username = "readonly"
                        },
                        new
                        {
                            Id = "u15",
                            Password = "hybrid123",
                            Username = "hybriduser"
                        });
                });

            modelBuilder.Entity("ToolTime.Models.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleName");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            UserId = "u1",
                            RoleName = "Admin"
                        },
                        new
                        {
                            UserId = "u2",
                            RoleName = "Manager"
                        },
                        new
                        {
                            UserId = "u3",
                            RoleName = "Technician"
                        },
                        new
                        {
                            UserId = "u4",
                            RoleName = "Technician"
                        },
                        new
                        {
                            UserId = "u5",
                            RoleName = "User"
                        },
                        new
                        {
                            UserId = "u6",
                            RoleName = "User"
                        },
                        new
                        {
                            UserId = "u7",
                            RoleName = "User"
                        },
                        new
                        {
                            UserId = "u8",
                            RoleName = "Technician"
                        },
                        new
                        {
                            UserId = "u8",
                            RoleName = "User"
                        },
                        new
                        {
                            UserId = "u9",
                            RoleName = "Manager"
                        },
                        new
                        {
                            UserId = "u9",
                            RoleName = "User"
                        },
                        new
                        {
                            UserId = "u10",
                            RoleName = "Developer"
                        },
                        new
                        {
                            UserId = "u10",
                            RoleName = "Admin"
                        },
                        new
                        {
                            UserId = "u11",
                            RoleName = "QA"
                        },
                        new
                        {
                            UserId = "u12",
                            RoleName = "Viewer"
                        },
                        new
                        {
                            UserId = "u13",
                            RoleName = "Admin"
                        },
                        new
                        {
                            UserId = "u13",
                            RoleName = "Manager"
                        },
                        new
                        {
                            UserId = "u13",
                            RoleName = "Technician"
                        },
                        new
                        {
                            UserId = "u14",
                            RoleName = "ReadOnly"
                        },
                        new
                        {
                            UserId = "u15",
                            RoleName = "User"
                        },
                        new
                        {
                            UserId = "u15",
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("ToolTime.Models.CheckoutRecord", b =>
                {
                    b.HasOne("ToolTime.Models.Tool", "Tool")
                        .WithMany()
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToolTime.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tool");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToolTime.Models.MaintenanceRequest", b =>
                {
                    b.HasOne("ToolTime.Models.Tool", "Tool")
                        .WithMany()
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToolTime.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tool");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToolTime.Models.UserRole", b =>
                {
                    b.HasOne("ToolTime.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToolTime.Models.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
